# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: GitOps CI/CD Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:                     
  id-token: write                 
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
  
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - uses: docker/login-action@v2 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./app 
        file: ./app/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ github.sha }}, ${{ secrets.DOCKER_USERNAME }}/hello-gitops:latest
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    env:
      RESOURCE_GROUP: elisska-devops-aks-cluster
      CLUSTER_NAME: elisska-devops-aks-cluster
      KUSTOMIZE_PATH_V1: ${{ github.workspace }}/k8s_v1
      KUSTOMIZE_PATH_V2: ${{ github.workspace }}/k8s_v2
      NAMESPACE_NAME: hello-gitops

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.6.1"

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install shyaml

    - name: Set env variable for pod names
      run: |
        set -e
        cd ${{ env.KUSTOMIZE_PATH_V1 }}
        echo "BLUE_PREFIX=$(shyaml get-value namePrefix < kustomization.yaml)" >> $GITHUB_ENV
        cd ${{ env.KUSTOMIZE_PATH_V2 }}
        echo "GREEN_PREFIX=$(shyaml get-value namePrefix < kustomization.yaml)" >> $GITHUB_ENV

    - name: Check env variables
      run: |
        set -e
        echo $BLUE_PREFIX
        echo $GREEN_PREFIX

    - name: Update Kubernetes resources 
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
       cd ${{ env.KUSTOMIZE_PATH_V2 }}
       kustomize edit set namespace ${{ env.NAMESPACE_NAME }}
       kustomize edit set image hello-gitops=$DOCKER_USERNAME/hello-gitops:$GITHUB_SHA
       cat kustomization.yaml     
       
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Bump docker tag"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

      # Logs in with your Azure credentials
    - name: Azure login
      id: azure-login
      uses: azure/login@v1.4.6
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Use kubelogin to configure your kubeconfig for Azure auth
    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.0.25'

    # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
    - name: Get K8s context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        admin: 'false'
        use-kubelogin: 'true'

    # Set up kubectl
    - name: Set up kubectl
      run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }}

    # Deploy to green
    - name: Deploy version 2
      run: |
       cd ${{ env.KUSTOMIZE_PATH_V2 }}
       kubectl apply -k ${{ env.KUSTOMIZE_PATH_V2 }}

    # Check if green deployment healthy
    - name: Health Check for Green Deployment
      id: health-check-green
      run: |
        # Wait for the green deployment to roll out successfully
        kubectl rollout status deployment/${{ env.GREEN_PREFIX }}hello-gitops -n ${{ env.NAMESPACE_NAME }}
        echo steps.health-check-green.outcome

    # If green deployment is ok - delete the blue deployment
    - name: Delete the Blue Deployment
      if: steps.health-check-green.outcome == 'success'
      run: |
        # Delete the blue deployment
        cd ${{ env.KUSTOMIZE_PATH_V1 }}
        kubectl delete -k .

  # If promotion is successful edit kustomize files
    - name: Update Kubernetes resources 
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
       cd ${{ env.KUSTOMIZE_PATH_V1 }}
       kustomize edit set namespace ${{ env.NAMESPACE_NAME }}
       kustomize edit set nameprefix ${{ env.GREEN_PREFIX}}
       kustomize edit set image hello-gitops=$DOCKER_USERNAME/hello-gitops:$GITHUB_SHA
       cat kustomization.yaml
       cd ${{ env.KUSTOMIZE_PATH_V2 }}
       kustomize edit set nameprefix ${{ env.BLUE_PREFIX}}
       cat kustomization.yaml

    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Bump docker tag and prefix exchange"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
  


    
        






