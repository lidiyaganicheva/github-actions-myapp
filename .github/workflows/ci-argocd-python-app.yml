# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: GitOps CI/CD Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:                     
  id-token: write                 
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest shyaml
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
  #   - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
  #   - name: Test with pytest
  #     run: |
  #       pytest

  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v3
      
  #   - name: Set up Docker Buildx
  #     id: buildx
  #     uses: docker/setup-buildx-action@v2
      
  #   - name: Cache Docker layers
  #     uses: actions/cache@v3
  #     with:
  #       path: /tmp/.buildx-cache
  #       key: ${{ runner.os }}-buildx-${{ github.sha }}
  #       restore-keys: |
  #         ${{ runner.os }}-buildx-
    
  #   - uses: docker/login-action@v2 
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_PASSWORD }}
      
  #   - name: Build and push
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: ./app 
  #       file: ./app/Dockerfile
  #       builder: ${{ steps.buildx.outputs.name }}
  #       push: true
  #       tags: ${{ secrets.DOCKER_USERNAME }}/hello-gitops:${{ github.sha }}, ${{ secrets.DOCKER_USERNAME }}/hello-gitops:latest
  #       platforms: linux/amd64,linux/arm64
  #       cache-from: type=local,src=/tmp/.buildx-cache
  #       cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    env:
      RESOURCE_GROUP: elisska-devops-aks-cluster
      CLUSTER_NAME: elisska-devops-aks-cluster
      KUSTOMIZE_PATH: k8s

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.6.1"

    - name: Set env variable for blue namespace name
      run: |
        set -e
        cd ${{ env.KUSTOMIZE_PATH }}
        echo "BLUE_NAMESPACE=$(shyaml get-value namespace < kustomization.yaml)" >> $GITHUB_ENV
        echo "BLUE_IMAGE=$(shyaml get-value images.newName:images.newTag < kustomization.yaml)" >> $GITHUB_ENV
        
        if [ "$BLUE_NAMESPACE" = "hello-gitops-green" ]; then
          echo "GREEN_NAMESPACE=\"hello-gitops-blue\"" >> $GITHUB_ENV
        else
          echo "GREEN_NAMESPACE=\"hello-gitops-green\"" >> $GITHUB_ENV
        fi


    - name: Test
      run: |
        set -e
        echo $BLUE_NAMESPACE
        echo $BLUE_IMAGE
        echo $GREEN_NAMESPACE


    # - name: Update Kubernetes resources 
    #   env:
    #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #   run: |
    #    cd ${{ env.KUSTOMIZE_PATH }}
    #    kustomize edit set namespace hello-gitops
    #    kustomize edit set image hello-gitops=$DOCKER_USERNAME/hello-gitops:$GITHUB_SHA
    #    kustomize edit set namespace ${{ evn.GREEN_NAMESPACE }}
    #    cat kustomization.yaml
       

    # - name: Test
    #   run:|
    #    echo $BLUE_NAMESPACE
    #    echo $BLUE_IMAGE

        
    # - name: Commit files
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git commit -am "Bump docker tag"

    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}

    #   # Logs in with your Azure credentials
    # - name: Azure login
    #   id: azure-login
    #   uses: azure/login@v1.4.6
    #   with:
    #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # # Use kubelogin to configure your kubeconfig for Azure auth
    # - name: Set up kubelogin for non-interactive login
    #   uses: azure/use-kubelogin@v1
    #   with:
    #     kubelogin-version: 'v0.0.25'

    # # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
    # - name: Get K8s context
    #   uses: azure/aks-set-context@v3
    #   with:
    #     resource-group: ${{ env.RESOURCE_GROUP }}
    #     cluster-name: ${{ env.CLUSTER_NAME }}
    #     admin: 'false'
    #     use-kubelogin: 'true'


    # # Runs Kustomize to create manifest files for v2
    # - name: Bake deployment
    #   uses: azure/k8s-bake@v2
    #   with:
    #     renderEngine: "kustomize"
    #     kustomizationPath: ${{ env.KUSTOMIZE_PATH }}
    #     kubectl-version: latest
    #   id: bake

    # - name: Create green workloads and configurations 
    #   id: promote-app
    #   uses: Azure/k8s-deploy@v4
    #   with:
    #     action: promote
    #     manifests: ${{ steps.bake.outputs.manifestsBundle }}
    #     strategy: blue-green
    #     namespace: ${{ env.GREEN_NAMESPACE}}
    #     route-method: ingress
    #     version_switch_buffer: 0.5

    # # - name: Update Kubernetes resources (if green deployment su)
    # #   env:
    # #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    # #   run: |
    # #    cd ${{ env.KUSTOMIZE_PATH }}
    # #    kustomize edit set namespace hello-gitops
    # #    kustomize edit set image hello-gitops=$DOCKER_USERNAME/hello-gitops:$GITHUB_SHA
    # #    cat kustomization.yaml

    # # Runs Kustomize to create manifest files for v_1 
    # - name: Bake deployment (if green deploy fails)
    #   if: steps.promote-app.outcome == 'failure'
    #   uses: azure/k8s-bake@v2
    #   with:
    #     renderEngine: "kustomize"
    #     kustomizationPath: ${{ env.KUSTOMIZE_PATH }}
    #     kubectl-version: latest
    #   id: bake_v1

    # - name: Delete green workloads and route traffic back (if green deploy fails)
    #   uses: Azure/k8s-deploy@v4
    #   if: steps.promote-app.outcome == 'failure'
    #   with:
    #     action: reject
    #     manifests: ${{ steps.bake_v1.outputs.manifestsBundle }}
    #     strategy: blue-green
    #     namespace: hello-gitops
    #     route-method: ingress
    #     version-switch-buffer: 0.5

    
        






